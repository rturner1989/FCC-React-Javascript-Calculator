{"version":3,"sources":["Keypad.js","Display.js","Calculator.js","App.js","index.js"],"names":["Keypad","handleClick","handleNumbers","handleOperators","clearInput","calculate","id","className","onClick","e","target","innerHTML","Display","equationDisplay","calculatedResult","Calculator","useState","setEquationDisplay","setCalculatedResult","equals","setEquals","isOperator","RegExp","value","includes","val","length","charAt","test","substr","result","math","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9ceb0b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Keypad = ({\r\n    handleClick,\r\n    handleNumbers,\r\n    handleOperators,\r\n    clearInput,\r\n    calculate,\r\n}) => {\r\n    return (\r\n        <section id=\"keypad\">\r\n            <section className=\"btn-container\">\r\n                <button id=\"clear\" onClick={() => clearInput()}>\r\n                    AC\r\n                </button>\r\n                <button id=\"backspace\">backspace</button>\r\n                <button\r\n                    id=\"divide\"\r\n                    onClick={(e) => handleOperators(e.target.innerHTML)}\r\n                >\r\n                    /\r\n                </button>\r\n            </section>\r\n            <section className=\"btn-container\">\r\n                <button\r\n                    id=\"seven\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    7\r\n                </button>\r\n                <button\r\n                    id=\"eight\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    8\r\n                </button>\r\n                <button\r\n                    id=\"nine\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    9\r\n                </button>\r\n                <button\r\n                    id=\"multiply\"\r\n                    onClick={(e) => handleOperators(e.target.innerHTML)}\r\n                >\r\n                    *\r\n                </button>\r\n            </section>\r\n            <section className=\"btn-container\">\r\n                <button\r\n                    id=\"four\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    4\r\n                </button>\r\n                <button\r\n                    id=\"five\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    5\r\n                </button>\r\n                <button\r\n                    id=\"six\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    6\r\n                </button>\r\n                <button\r\n                    id=\"subtract\"\r\n                    onClick={(e) => handleOperators(e.target.innerHTML)}\r\n                >\r\n                    -\r\n                </button>\r\n            </section>\r\n            <section className=\"btn-container\">\r\n                <button\r\n                    id=\"one\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    1\r\n                </button>\r\n                <button\r\n                    id=\"two\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    2\r\n                </button>\r\n                <button\r\n                    id=\"three\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    3\r\n                </button>\r\n                <button\r\n                    id=\"add\"\r\n                    onClick={(e) => handleOperators(e.target.innerHTML)}\r\n                >\r\n                    +\r\n                </button>\r\n            </section>\r\n            <section className=\"btn-container\">\r\n                <button\r\n                    id=\"zero\"\r\n                    onClick={(e) => handleNumbers(e.target.innerHTML)}\r\n                >\r\n                    0\r\n                </button>\r\n                <button\r\n                    id=\"decimal\"\r\n                    onClick={(e) => handleClick(e.target.innerHTML)}\r\n                >\r\n                    .\r\n                </button>\r\n                <button id=\"equals\" onClick={() => calculate()}>\r\n                    =\r\n                </button>\r\n            </section>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Keypad;\r\n","import React from \"react\";\r\n\r\nconst Display = ({ equationDisplay, calculatedResult }) => {\r\n    return (\r\n        <section className=\"display\">\r\n            <h3 id=\"input\">{equationDisplay}</h3>\r\n            <h1 id=\"display\">{calculatedResult}</h1>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState } from \"react\";\r\nimport Keypad from \"./Keypad\";\r\nimport Display from \"./Display\";\r\nimport * as math from \"mathjs\";\r\n\r\nconst Calculator = () => {\r\n    const [equationDisplay, setEquationDisplay] = useState(\"\");\r\n    const [calculatedResult, setCalculatedResult] = useState(\"0\");\r\n    const [equals, setEquals] = useState(null);\r\n\r\n    const isOperator = new RegExp(/[-,+,*,\\/]/);\r\n\r\n    const handleClick = (value) => {\r\n        if (value === \".\") {\r\n            if (!calculatedResult.includes(value)) {\r\n                setEquationDisplay((val) => (val += value));\r\n                setCalculatedResult((val) => (val += value));\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleNumbers = (value) => {\r\n        if (equals !== null) {\r\n            setEquals(null);\r\n            setCalculatedResult(\"\");\r\n            setEquationDisplay(\"\");\r\n        }\r\n        if (\r\n            calculatedResult.length === 1 &&\r\n            calculatedResult.charAt(0) === \"0\"\r\n        ) {\r\n            setCalculatedResult(value);\r\n        } else {\r\n            setCalculatedResult((val) => (val += value));\r\n        }\r\n        if (isOperator.test(calculatedResult)) {\r\n            setCalculatedResult(value);\r\n        }\r\n        setEquationDisplay((val) => (val += value));\r\n    };\r\n\r\n    const handleOperators = (value) => {\r\n        if (equals !== null) {\r\n            setEquationDisplay(`${equals}${value}`);\r\n            setEquals(null);\r\n        } else if (value === \"-\") {\r\n            setEquationDisplay((val) => (val += value));\r\n        } else if (isOperator.test(calculatedResult)) {\r\n            if (calculatedResult === \"-\") {\r\n                setEquationDisplay(\r\n                    (val) => val.substr(0, val.length - 2) + value\r\n                );\r\n            } else {\r\n                setEquationDisplay(\r\n                    (val) => val.substr(0, val.length - 1) + value\r\n                );\r\n            }\r\n        } else {\r\n            setEquationDisplay((val) => (val += value));\r\n        }\r\n        setCalculatedResult(value);\r\n    };\r\n\r\n    const calculate = () => {\r\n        if (equals === null) {\r\n            const result = math.evaluate(equationDisplay);\r\n            setCalculatedResult(result);\r\n            setEquationDisplay((val) => (val += `=${result}`));\r\n            setEquals(result);\r\n        }\r\n    };\r\n    const clearInput = () => {\r\n        setEquationDisplay(\"\");\r\n        setCalculatedResult(\"0\");\r\n    };\r\n\r\n    return (\r\n        <div id=\"calculator\">\r\n            <Display\r\n                equationDisplay={equationDisplay}\r\n                calculatedResult={calculatedResult}\r\n            />\r\n            <Keypad\r\n                handleClick={handleClick}\r\n                handleNumbers={handleNumbers}\r\n                handleOperators={handleOperators}\r\n                clearInput={clearInput}\r\n                calculate={calculate}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport Calculator from \"./Calculator\";\r\n\r\nfunction App() {\r\n    return (\r\n        <main>\r\n            <Calculator />;\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}